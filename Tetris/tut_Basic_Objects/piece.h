// Основные константы
const int numPieces = 7;	// Количество различных частей
const int numRotations = 4; // Количество оборотов для каждой детали
const int numSpaces = 8;	// Объем памяти для хранения информации о каждом изделии

// Класс игровых фигур
class Piece {

public:

	// Конструкторы
	Piece();
	Piece(int newPiece);

	// Координаты фрагмента (вычисляются по верхнему левому углу фрагмента, даже если этот угол пуст)
	int x;
	int y;

	// Значения цвета
	float redVal, greenVal, blueVal;

	// Тип детали и ее вращение
	int type;
	int rotation;

	// Вращение детали
	void rotatePiece(int dir);

	// Настройка цвета элемента в формате RGB
	void color(float r, float g, float b);

	// Значения для вращающихся деталей
	const int* rotations();
};

// Все фигуры с каждым вариантом их вращения в сетке в формате {x0, y0, x1, y1, x2, y2, x3, y3}
const int gamePieces[numPieces][numRotations][numSpaces] =
{
	{
		{0, 0, 1, 0, 0, 1, 1, 1}, // Квадрат
		{0, 0, 1, 0, 0, 1, 1, 1},
		{0, 0, 1, 0, 0, 1, 1, 1},
		{0, 0, 1, 0, 0, 1, 1, 1},
	},
	{
		{0, 0, 0, 1, 0, 2, 0, 3}, // Линия
		{0, 0, 1, 0, 2, 0, 3, 0},
		{0, 0, 0, 1, 0, 2, 0, 3},
		{0, 0, 1, 0, 2, 0, 3, 0},
	},
	{
		{0, 0, 0, 1, 1, 1, 0, 2}, // Т
		{1, 0, 0, 1, 1, 1, 2, 1},
		{0, 1, 1, 0, 1, 1, 1, 2},
		{0, 0, 1, 0, 2, 0, 1, 1}
	},
	{	{0, 0, 1, 0, 0, 1, 0, 2}, // Г
		{0, 0, 0, 1, 1, 1, 2, 1},
		{1, 0, 1, 1, 0, 2, 1, 2},
		{0, 0, 1, 0, 2, 0, 2, 1}
	},
	{	{0, 0, 1, 0, 1, 1, 1, 2}, // Г зеркл.
		{0, 0, 1, 0, 2, 0, 0, 1},
		{0, 0, 0, 1, 0, 2, 1, 2},
		{2, 0, 0, 1, 1, 1, 2, 1}
	},
	{	{0, 0, 0, 1, 1, 1, 1, 2}, // Ступень
		{1, 0, 2, 0, 0, 1, 1, 1},
		{0, 0, 0, 1, 1, 1, 1, 2},
		{1, 0, 2, 0, 0, 1, 1, 1}
	},
	{	{1, 0, 0, 1, 1, 1, 0, 2}, // Ступень зеркл.
		{0, 0, 1, 0, 1, 1, 2, 1},
		{1, 0, 0, 1, 1, 1, 0, 2},
		{0, 0, 1, 0, 1, 1, 2, 1}
	}
};
